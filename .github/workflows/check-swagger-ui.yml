name: Check Swagger UI Version

on:
  pull_request:
#  schedule:
#    # Run weekly on Monday at 8:00 UTC
#    - cron: '0 8 * * 1'
#  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write
  pull-requests: write

jobs:
  check-swagger-ui-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: uv sync

      - name: Get current version of Swagger UI
        id: current_version
        run: |
          VERSION=$(cat apispec_aiohttp/swagger_ui/VERSION)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Run update Swagger UI to latest version
        run: |
          uv run tools/update_swagger_ui.py
          uv run pre-commit run

      - name: Get updated version of Swagger UI
        id: updated_version
        run: |
          VERSION=$(cat apispec_aiohttp/swagger_ui/VERSION)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Set up branch name
        if: steps.current_version.outputs.version != steps.updated_version.outputs.version
        id: set_branch
        run: |
          BRANCH_NAME="update-swagger-ui-to-${{ steps.updated_version.outputs.version }}"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
            # NOTE: The user email is {user.id}+{user.login}@users.noreply.github.com.

      # See users API: https://api.github.com/users/github-actions%5Bbot%5D
      - name: Create branch and update Swagger UI
        if: steps.current_version.outputs.version != steps.updated_version.outputs.version
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Create and switch to new branch
          git checkout -b ${{ steps.set_branch.outputs.branch_name }}

           # Commit changes
          git add apispec_aiohttp/swagger_ui
          git add README.md
          git commit -m "Update Swagger UI to ${{ steps.updated_version.outputs.version }}"

          # Push branch to remote
          git push origin ${{ steps.set_branch.outputs.branch_name }}

      - name: Create Pull Request
        if: steps.current_version.outputs.version != steps.updated_version.outputs.version
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.set_branch.outputs.branch_name }}
          title: "Update Swagger UI to ${{ steps.updated_version.outputs.version }}"
          body: |
            ## Automated Swagger UI Update

            This PR updates Swagger UI from `${{ steps.current_version.outputs.version }}` to `${{ steps.updated_version.outputs.version }}`.

            Changes are automatically generated by the GitHub workflow 'check-swagger-ui.yml'.

            ### Changes included:
            - Updated Swagger UI distribution files
            - Updated version references in documentation

            ### Checklist:
            - [ ] Review the changes to ensure everything works as expected
            - [ ] Run tests to verify compatibility
          labels: "enhancement, dependencies"
          draft: false
          delete-branch: true
